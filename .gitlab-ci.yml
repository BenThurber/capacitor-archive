stages:
  - setup
  - test
  - deploy

default:
  before_script:


setup:
  stage: setup
  script:
    - cd client
    - echo n | npm install
  cache:
    paths:
      - client/node_modules/
  artifacts:
    paths:
      - client/node_modules/

variables:
  GIT_DEPTH: 0

junit:
  stage: test
  script:
    - cd server
    - ./gradlew test

jasmine:
  stage: test
  script:
    - cd client
    - ng test --browsers ChromeHeadlessNoSandbox --watch=false


deploy-test-server:
  stage: deploy
  script:
    # Create artifact
    - cd server
    - ./gradlew bootJar
    # Move artifact to clean directory
    - rm -rf /home/gitlab-runner/test-server/ || true
    - mkdir -p /home/gitlab-runner/test-server/
    - cp -r ./build/libs /home/gitlab-runner/test-server
    # Update bash script and restart service
    - rm -f /home/gitlab-runner/runTestServer.sh || true
    - cp ../deployment-scripts/runTestServer.sh /home/gitlab-runner/runTestServer.sh
    # Copy new service file and restart service
    - cd /home/gitlab-runner
    - kill -9 $(cat testServer.pid) || true
    - nohup ./runTestServer.sh > nohupTestServer.out 2>&1 & echo $! > testServer.pid
#  only:
#    refs:
#      - development



deploy-test-client:
  stage: deploy
  script:
    # Create artifact
    - cd client
    - ng --prod --aot build
    # Move artifact to clean directory
    - rm -rf /home/gitlab-runner/test-client/ || true
    - mkdir -p /home/gitlab-runner/test-client/
    - cp -r ./dist/client/ /home/gitlab-runner/test-client/
    # Update bash script and restart service
    - rm -f /home/gitlab-runner/runTestClient.sh || true
    - cp ../deployment-scripts/runTestClient.sh /home/gitlab-runner/runTestClient.sh
    # Copy new service file and restart service
    - cd /home/gitlab-runner
    - kill -9 $(cat testClient.pid) || true
    - nohup ./runTestClient.sh > nohupTestClient.out 2>&1 & echo $! > testClient.pid
#  only:
#    refs:
#      - development
